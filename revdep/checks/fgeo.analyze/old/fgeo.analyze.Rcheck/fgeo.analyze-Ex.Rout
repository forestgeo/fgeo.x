
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "fgeo.analyze"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('fgeo.analyze')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("abundance")
> ### * abundance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: abundance
> ### Title: Abundance and basal area, optionally by groups.
> ### Aliases: abundance basal_area
> 
> ### ** Examples
> 
> library(fgeo.tool)

Attaching package: 'fgeo.tool'

The following object is masked from 'package:stats':

    filter

> 
> # abundance() -------------------------------------------------------------
> 
> abundance(data.frame(1))
[90m# A tibble: 1 x 1[39m
      n
  [3m[90m<int>[39m[23m
[90m1[39m     1
> 
> # One stem per tree
> tree <- tribble(
+   ~TreeID, ~StemID, ~DBH,
+   "1", "1.1", 11,
+   "2", "2.1", 21
+ )
> 
> abundance(tree)
[90m# A tibble: 1 x 1[39m
      n
  [3m[90m<int>[39m[23m
[90m1[39m     2
> 
> # One tree with multiple stems
> stem <- tribble(
+   ~TreeID, ~StemID, ~DBH,
+   "1", "1.1", 11,
+   "1", "1.2", 12
+ )
> 
> abundance(stem)
Warning: `treeid`: Duplicated values were detected. Do you need to pick main stems?
[90m# A tibble: 1 x 1[39m
      n
  [3m[90m<int>[39m[23m
[90m1[39m     2
> ## Not run: 
> ##D # Similar but more realistic
> ##D assert_is_installed("fgeo.x")
> ##D stem <- fgeo.x::download_data("luquillo_stem5_random")
> ##D 
> ##D abundance(stem)
> ##D 
> ##D abundance(pick_main_stem(stem))
> ## End(Not run)
> 
> vft <- tribble(
+   ~PlotName, ~CensusID, ~TreeID, ~StemID, ~DBH,
+   "p", 1, "1", "1.1", 10,
+   "q", 2, "1", "1.1", 10
+ )
> 
> # * Warns if it detects multiple values of censusid or plotname
> # * Also warns if it detects duplicated values of treeid
> abundance(vft)
Warning: `treeid`: Duplicated values were detected. Do you need to pick main stems?
Warning: `censusid`: Multiple values were detected. Do you need to group by censusid?
Warning: `plotname`: Multiple values were detected. Do you need to pick a single plot?
[90m# A tibble: 1 x 1[39m
      n
  [3m[90m<int>[39m[23m
[90m1[39m     2
> 
> # If trees have buttressess, the data may have multiple stems per treeid or
> # multiple measures per stemid.
> vft2 <- tribble(
+   ~CensusID, ~TreeID, ~StemID, ~DBH, ~HOM,
+   1, "1", "1.1", 88, 130,
+   1, "1", "1.1", 10, 160,
+   1, "2", "2.1", 20, 130,
+   1, "2", "2.2", 30, 130,
+ )
> 
> # You should count only the main stem of each tree
> (main_stem <- pick_main_stem(vft2))
[90m# A tibble: 2 x 5[39m
  CensusID TreeID StemID   DBH   HOM
     [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m        1 1      1.1       10   160
[90m2[39m        1 2      2.2       30   130
> 
> abundance(main_stem)
[90m# A tibble: 1 x 1[39m
      n
  [3m[90m<int>[39m[23m
[90m1[39m     2
> 
> vft3 <- tribble(
+   ~CensusID, ~TreeID, ~StemID, ~DBH, ~HOM,
+   1, "1", "1.1", 20, 130,
+   1, "1", "1.2", 10, 160, # Main stem
+   2, "1", "1.1", 12, 130,
+   2, "1", "1.2", 22, 130 # Main stem
+ )
> 
> # You can compute by groups
> by_census <- group_by(vft3, CensusID)
> (main_stems_by_census <- pick_main_stem(by_census))
[90m# A tibble: 2 x 5[39m
[90m# Groups:   CensusID [2][39m
  CensusID TreeID StemID   DBH   HOM
     [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m        1 1      1.2       10   160
[90m2[39m        2 1      1.2       22   130
> 
> abundance(main_stems_by_census)
[90m# A tibble: 2 x 2[39m
[90m# Groups:   CensusID [2][39m
  CensusID     n
     [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m
[90m1[39m        1     1
[90m2[39m        2     1
> 
> # basal_area() ------------------------------------------------------------
> 
> # Data must have a column named dbh (case insensitive)
> basal_area(data.frame(dbh = 1))
[90m# A tibble: 1 x 1[39m
  basal_area
       [3m[90m<dbl>[39m[23m
[90m1[39m      0.785
> 
> # * Warns if it detects multiple values of censusid or plotname
> # * Also warns if it detects duplicated values of stemid
> basal_area(vft)
Warning: `stemid`: Duplicated values were detected. Do you need to pick largest `hom` values?
Warning: `censusid`: Multiple values were detected. Do you need to group by censusid?
Warning: `plotname`: Multiple values were detected. Do you need to pick a single plot?
[90m# A tibble: 1 x 1[39m
  basal_area
       [3m[90m<dbl>[39m[23m
[90m1[39m       157.
> 
> # First you may pick the main stemid of each stem
> (main_stemids <- pick_main_stemid(vft2))
[90m# A tibble: 3 x 5[39m
  CensusID TreeID StemID   DBH   HOM
     [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m        1 1      1.1       10   160
[90m2[39m        1 2      2.1       20   130
[90m3[39m        1 2      2.2       30   130
> 
> basal_area(main_stemids)
[90m# A tibble: 1 x 1[39m
  basal_area
       [3m[90m<dbl>[39m[23m
[90m1[39m      [4m1[24m100.
> 
> # You can compute by groups
> basal_area(by_census)
[90m# A tibble: 2 x 2[39m
[90m# Groups:   CensusID [2][39m
  CensusID basal_area
     [3m[90m<dbl>[39m[23m      [3m[90m<dbl>[39m[23m
[90m1[39m        1       393.
[90m2[39m        2       493.
> ## Not run: 
> ##D measurements_is_installed <- requireNamespace("measurements", quietly = TRUE)
> ##D if (measurements_is_installed) {
> ##D   library(measurements)
> ##D 
> ##D   # Convert units
> ##D   ba <- basal_area(by_census)
> ##D   ba$basal_area_he <- conv_unit(
> ##D     ba$basal_area,
> ##D     from = "mm2",
> ##D     to = "hectare"
> ##D   )
> ##D 
> ##D   ba
> ##D }
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()

detaching 'package:bindrcpp', 'package:fgeo.tool'

> nameEx("abundance_byyr")
> ### * abundance_byyr
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: abundance_byyr
> ### Title: Create tables of abundance and basal area by year.
> ### Aliases: abundance_byyr basal_area_byyr
> 
> ### ** Examples
> 
> library(fgeo.tool)

Attaching package: 'fgeo.tool'

The following object is masked from 'package:stats':

    filter

> 
> # Example data
> vft <- tibble(
+   PlotName = c("luq", "luq", "luq", "luq", "luq", "luq", "luq", "luq"),
+   CensusID = c(1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L),
+   TreeID = c(1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L),
+   StemID = c(1.1, 1.2, 2.1, 2.2, 1.1, 1.2, 2.1, 2.2),
+   Status = c(
+     "alive", "dead", "alive", "alive", "alive", "gone",
+     "dead", "dead"
+   ),
+   DBH = c(10L, NA, 20L, 30L, 20L, NA, NA, NA),
+   Genus = c("Gn", "Gn", "Gn", "Gn", "Gn", "Gn", "Gn", "Gn"),
+   SpeciesName = c("spp", "spp", "spp", "spp", "spp", "spp", "spp", "spp"),
+   ExactDate = c(
+     "2001-01-01", "2001-01-01", "2001-01-01", "2001-01-01",
+     "2002-01-01", "2002-01-01", "2002-01-01",
+     "2002-01-01"
+   ),
+   PlotCensusNumber = c(1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L),
+   Family = c("f", "f", "f", "f", "f", "f", "f", "f"),
+   Tag = c(1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L),
+   HOM = c(130L, 130L, 130L, 130L, 130L, 130L, 130L, 130L)
+ )
> 
> vft
[90m# A tibble: 8 x 13[39m
  PlotName CensusID TreeID StemID Status   DBH Genus SpeciesName ExactDate
  [3m[90m<chr>[39m[23m       [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m  [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m       [3m[90m<chr>[39m[23m    
[90m1[39m luq             1      1    1.1 alive     10 Gn    spp         2001-01-~
[90m2[39m luq             1      1    1.2 dead      [31mNA[39m Gn    spp         2001-01-~
[90m3[39m luq             1      2    2.1 alive     20 Gn    spp         2001-01-~
[90m4[39m luq             1      2    2.2 alive     30 Gn    spp         2001-01-~
[90m5[39m luq             2      1    1.1 alive     20 Gn    spp         2002-01-~
[90m6[39m luq             2      1    1.2 gone      [31mNA[39m Gn    spp         2002-01-~
[90m7[39m luq             2      2    2.1 dead      [31mNA[39m Gn    spp         2002-01-~
[90m8[39m luq             2      2    2.2 dead      [31mNA[39m Gn    spp         2002-01-~
[90m# ... with 4 more variables: PlotCensusNumber [3m[90m<int>[90m[23m, Family [3m[90m<chr>[90m[23m, Tag [3m[90m<int>[90m[23m,
#   HOM [3m[90m<int>[90m[23m[39m
> 
> abundance_byyr(vft, DBH >= 10, DBH < 20)
[90m# A tibble: 1 x 3[39m
  species family yr_2001
  [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m    [3m[90m<dbl>[39m[23m
[90m1[39m Gn spp  f            1
> 
> abundance_byyr(vft, DBH >= 10)
[90m# A tibble: 1 x 4[39m
  species family yr_2001 yr_2002
  [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m    [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m
[90m1[39m Gn spp  f            2       1
> 
> basal <- basal_area_byyr(vft, DBH >= 10)
> basal
[90m# A tibble: 1 x 4[39m
  species family yr_2001 yr_2002
  [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m    [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m
[90m1[39m Gn spp  f        [4m1[24m100.    314.
> ## Not run: 
> ##D measurements_is_installed <- requireNamespace("measurements", quietly = TRUE)
> ##D if (measurements_is_installed) {
> ##D   # Convert units
> ##D   years <- c("yr_2001", "yr_2002")
> ##D   basal_he <- basal %>%
> ##D     purrr::modify_at(
> ##D       years,
> ##D       ~ measurements::conv_unit(.x, from = "mm2", to = "hectare")
> ##D     )
> ##D   basal_he
> ##D 
> ##D   # Standardize
> ##D   number_of_hectares <- 50
> ##D   basal_he %>%
> ##D     purrr::map_at(years, ~ .x / number_of_hectares)
> ##D }
> ## End(Not run)
> 
> 
> 
> cleanEx()

detaching 'package:fgeo.tool'

> nameEx("fgeo_habitat")
> ### * fgeo_habitat
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fgeo_habitat
> ### Title: Create habitat data from measures of topography.
> ### Aliases: fgeo_habitat
> 
> ### ** Examples
> 
> assert_is_installed("fgeo.x")
> 
> # Input a ForestGEO-like elevation list or dataframe
> elevation_ls <- fgeo.x::elevation
> habitats <- fgeo_habitat(
+   elevation_ls,
+   gridsize = 20, n = 4
+ )
> 
> # Or
> elevation_df <- fgeo.x::elevation$col
> habitats <- fgeo_habitat(
+   elevation_df,
+   gridsize = 20, n = 4,
+   xdim = 320, ydim = 500
+ )
> 
> str(habitats)
Classes 'fgeo_habitat', 'fgeo_topography', 'tbl_df', 'tbl' and 'data.frame':	400 obs. of  3 variables:
 $ gx      : num  0 0 0 0 0 0 0 0 0 0 ...
 $ gy      : num  0 20 40 60 80 100 120 140 160 180 ...
 $ habitats: int  1 1 1 1 1 1 1 1 1 1 ...
> ## Not run: 
> ##D fgeo_plot_is_installed <- requireNamespace("fgeo.plot", quietly = TRUE)
> ##D if (fgeo_plot_is_installed) {
> ##D   library(fgeo.plot)
> ##D 
> ##D   autoplot(habitats)
> ##D }
> ## End(Not run)
> 
> # Habitat data is useful for calculating species-habitat associations
> census <- fgeo.x::tree6_3species
> 
> as_tibble(
+   tt_test(census, habitats)
+ )
Using `plotdim = c(320, 500)`. To change this value see `?tt_test()`.
Using `gridsize = 20`. To change this value see `?tt_test()`.
[90m# A tibble: 12 x 8[39m
   habitat sp     N.Hab Gr.Hab Ls.Hab Eq.Hab Rep.Agg.Neut Obs.Quantile
 [90m*[39m [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m        [3m[90m<dbl>[39m[23m        [3m[90m<dbl>[39m[23m
[90m 1[39m 1       CASARB    29   [4m1[24m242    356      2            0        0.776
[90m 2[39m 2       CASARB    20    390   [4m1[24m206      4            0        0.244
[90m 3[39m 3       CASARB    12    778    817      5            0        0.486
[90m 4[39m 4       CASARB     5    932    658     10            0        0.582
[90m 5[39m 1       PREMON    91   [4m1[24m093    504      3            0        0.683
[90m 6[39m 2       PREMON    89   [4m1[24m254    344      2            0        0.784
[90m 7[39m 3       PREMON    40    305   [4m1[24m292      3            0        0.191
[90m 8[39m 4       PREMON    14    270   [4m1[24m322      8            0        0.169
[90m 9[39m 1       SLOBER    18    273   [4m1[24m324      3            0        0.171
[90m10[39m 2       SLOBER    24    810    788      2            0        0.506
[90m11[39m 3       SLOBER    17   [4m1[24m155    440      5            0        0.722
[90m12[39m 4       SLOBER     7   [4m1[24m292    303      5            0        0.808
> 
> 
> 
> cleanEx()
> nameEx("fgeo_topography")
> ### * fgeo_topography
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fgeo_topography
> ### Title: Create topography data: convexity, slope, and mean elevation.
> ### Aliases: fgeo_topography fgeo_topography.data.frame
> ###   fgeo_topography.list
> 
> ### ** Examples
> 
> assert_is_installed("fgeo.x")
> 
> elev_list <- fgeo.x::elevation
> fgeo_topography(elev_list, gridsize = 20)
[90m# A tibble: 400 x 5[39m
      gx    gy meanelev convex slope
 [90m*[39m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m    [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m 1[39m     0     0     365. -[31m0[39m[31m.[39m[31m390[39m  8.87
[90m 2[39m     0    20     365. -[31m0[39m[31m.[39m[31m285[39m 13.7 
[90m 3[39m     0    40     367.  0.210 14.4 
[90m 4[39m     0    60     367.  0.34  15.9 
[90m 5[39m     0    80     362. -[31m0[39m[31m.[39m[31m255[39m 20.8 
[90m 6[39m     0   100     358. -[31m0[39m[31m.[39m[31m510[39m 12.4 
[90m 7[39m     0   120     359. -[31m0[39m[31m.[39m[31m28[39m  17.1 
[90m 8[39m     0   140     360. -[31m0[39m[31m.[39m[31m265[39m 22.1 
[90m 9[39m     0   160     362.  0.055 24.3 
[90m10[39m     0   180     364.  0.415 15.2 
[90m# ... with 390 more rows[39m
> 
> elev_df <- elev_list$col
> fgeo_topography(elev_df, gridsize = 20, xdim = 320, ydim = 500)
[90m# A tibble: 400 x 5[39m
      gx    gy meanelev convex slope
 [90m*[39m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m    [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m 1[39m     0     0     365. -[31m0[39m[31m.[39m[31m390[39m  8.87
[90m 2[39m     0    20     365. -[31m0[39m[31m.[39m[31m285[39m 13.7 
[90m 3[39m     0    40     367.  0.210 14.4 
[90m 4[39m     0    60     367.  0.34  15.9 
[90m 5[39m     0    80     362. -[31m0[39m[31m.[39m[31m255[39m 20.8 
[90m 6[39m     0   100     358. -[31m0[39m[31m.[39m[31m510[39m 12.4 
[90m 7[39m     0   120     359. -[31m0[39m[31m.[39m[31m28[39m  17.1 
[90m 8[39m     0   140     360. -[31m0[39m[31m.[39m[31m265[39m 22.1 
[90m 9[39m     0   160     362.  0.055 24.3 
[90m10[39m     0   180     364.  0.415 15.2 
[90m# ... with 390 more rows[39m
> 
> 
> 
> cleanEx()
> nameEx("recruitment_ctfs")
> ### * recruitment_ctfs
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: recruitment_ctfs
> ### Title: Recruitment, mortality, and growth.
> ### Aliases: recruitment_ctfs mortality_ctfs growth_ctfs
> 
> ### ** Examples
> 
> assert_is_installed("fgeo.x")
> 
> census1 <- fgeo.x::tree5
> census2 <- fgeo.x::tree6
> 
> as_tibble(
+   recruitment_ctfs(census1, census2)
+ )
Detected dbh ranges:
  * `census1` = 10.9-323.
  * `census2` = 10.5-347.
Using dbh `mindbh = 0` and above.

[90m# A tibble: 1 x 8[39m
     N2     R   rate   lower  upper  time  date1  date2
  [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m
[90m1[39m    29     3 0.024[4m1[24m 0.008[4m4[24m[4m6[24m 0.068[4m1[24m  4.53 [4m1[24m[4m8[24m938. [4m2[24m[4m0[24m601.
> 
> # Use `interaction(...)` to aggregate by any number of grouping variables
> sp_quadrat <- interaction(census1$sp, census1$quadrat)
> 
> recruitment <- recruitment_ctfs(
+   census1, census2,
+   split1 = sp_quadrat,
+   quiet = TRUE
+ )
> as_tibble(recruitment)
[90m# A tibble: 540 x 9[39m
   groups         N2     R  rate lower upper  time date1 date2
   [3m[90m<chr>[39m[23m       [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m 1[39m MATDOM.1007     1     0     0     0 0.410  4.50 [4m1[24m[4m8[24m891 [4m2[24m[4m0[24m535
[90m 2[39m CASSYL.1010     1     0     0     0 0.411  4.49 [4m1[24m[4m8[24m914 [4m2[24m[4m0[24m555
[90m 3[39m SLOBER.110      1     0     0     0 0.409  4.51 [4m1[24m[4m8[24m897 [4m2[24m[4m0[24m543
[90m 4[39m SLOBER.1106     1     0     0     0 0.404  4.56 [4m1[24m[4m8[24m849 [4m2[24m[4m0[24m516
[90m 5[39m CECSCH.1114     1     0     0     0 0.413  4.47 [4m1[24m[4m8[24m948 [4m2[24m[4m0[24m580
[90m 6[39m PSYBRA.1318     1     0     0     0 0.412  4.48 [4m1[24m[4m9[24m011 [4m2[24m[4m0[24m646
[90m 7[39m HIRRUG.1403     1     0     0     0 0.403  4.58 [4m1[24m[4m8[24m834 [4m2[24m[4m0[24m506
[90m 8[39m CASSYL.1411     1     0     0     0 0.414  4.45 [4m1[24m[4m8[24m931 [4m2[24m[4m0[24m558
[90m 9[39m SLOBER.1414     1     0     0     0 0.403  4.57 [4m1[24m[4m8[24m952 [4m2[24m[4m0[24m622
[90m10[39m GUAGUI.1419     1     0     0     0 0.406  4.54 [4m1[24m[4m9[24m012 [4m2[24m[4m0[24m670
[90m# ... with 530 more rows[39m
> 
> mortality <- mortality_ctfs(
+   census1, census2,
+   split1 = sp_quadrat, quiet = TRUE
+ )
> as_tibble(mortality)
[90m# A tibble: 540 x 10[39m
   groups          N     D  rate lower upper  time date1 date2 dbhmean
   [3m[90m<chr>[39m[23m       [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m
[90m 1[39m MATDOM.1007     1     0     0     0 0.410  4.50 [4m1[24m[4m8[24m891 [4m2[24m[4m0[24m535   240  
[90m 2[39m CASSYL.1010     1     0     0     0 0.411  4.49 [4m1[24m[4m8[24m914 [4m2[24m[4m0[24m555    67  
[90m 3[39m SLOBER.110      1     0     0     0 0.409  4.51 [4m1[24m[4m8[24m897 [4m2[24m[4m0[24m543   150  
[90m 4[39m SLOBER.1106     1     0     0     0 0.404  4.56 [4m1[24m[4m8[24m849 [4m2[24m[4m0[24m516    50  
[90m 5[39m CECSCH.1114     1     0     0     0 0.413  4.47 [4m1[24m[4m8[24m948 [4m2[24m[4m0[24m580   228  
[90m 6[39m PSYBRA.1318     1     0     0     0 0.412  4.48 [4m1[24m[4m9[24m011 [4m2[24m[4m0[24m646    14  
[90m 7[39m HIRRUG.1403     1     0     0     0 0.403  4.58 [4m1[24m[4m8[24m834 [4m2[24m[4m0[24m506    12.9
[90m 8[39m CASSYL.1411     1     0     0     0 0.414  4.45 [4m1[24m[4m8[24m931 [4m2[24m[4m0[24m558    13.1
[90m 9[39m SLOBER.1414     1     0     0     0 0.403  4.57 [4m1[24m[4m8[24m952 [4m2[24m[4m0[24m622    16.6
[90m10[39m GUAGUI.1419     1     0     0     0 0.406  4.54 [4m1[24m[4m9[24m012 [4m2[24m[4m0[24m670   108  
[90m# ... with 530 more rows[39m
> 
> growth <- growth_ctfs(census1, census2, split1 = sp_quadrat, quiet = TRUE)
> as_tibble(growth)
[90m# A tibble: 540 x 8[39m
   groups        rate     N  clim dbhmean  time date1 date2
   [3m[90m<chr>[39m[23m        [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m 1[39m MATDOM.1007  0         1    [31mNA[39m   240    4.50 [4m1[24m[4m8[24m891 [4m2[24m[4m0[24m535
[90m 2[39m CASSYL.1010  0.445     1    [31mNA[39m    67    4.49 [4m1[24m[4m8[24m914 [4m2[24m[4m0[24m555
[90m 3[39m SLOBER.110   0.666     1    [31mNA[39m   150    4.51 [4m1[24m[4m8[24m897 [4m2[24m[4m0[24m543
[90m 4[39m SLOBER.1106  0         1    [31mNA[39m    50    4.56 [4m1[24m[4m8[24m849 [4m2[24m[4m0[24m516
[90m 5[39m CECSCH.1114  1.79      1    [31mNA[39m   228    4.47 [4m1[24m[4m8[24m948 [4m2[24m[4m0[24m580
[90m 6[39m PSYBRA.1318  0.447     1    [31mNA[39m    14    4.48 [4m1[24m[4m9[24m011 [4m2[24m[4m0[24m646
[90m 7[39m HIRRUG.1403  1.66      1    [31mNA[39m    12.9  4.58 [4m1[24m[4m8[24m834 [4m2[24m[4m0[24m506
[90m 8[39m CASSYL.1411 [31mNA[39m         0    [31mNA[39m    [31mNA[39m   [31mNA[39m       [31mNA[39m    [31mNA[39m
[90m 9[39m SLOBER.1414  1.40      1    [31mNA[39m    16.6  4.57 [4m1[24m[4m8[24m952 [4m2[24m[4m0[24m622
[90m10[39m GUAGUI.1419 [31mNA[39m         0    [31mNA[39m    [31mNA[39m   [31mNA[39m       [31mNA[39m    [31mNA[39m
[90m# ... with 530 more rows[39m
> 
> # Easy way to separate grouping variables
> tidyr_is_installed <- requireNamespace("tidyr", quietly = TRUE)
> if (tidyr_is_installed) {
+   library(tidyr)
+ 
+   as_tibble(growth) %>%
+     separate(groups, into = c("sp", "quadrat"))
+ }
[90m# A tibble: 540 x 9[39m
   sp     quadrat   rate     N  clim dbhmean  time date1 date2
   [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m    [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m 1[39m MATDOM 1007     0         1    [31mNA[39m   240    4.50 [4m1[24m[4m8[24m891 [4m2[24m[4m0[24m535
[90m 2[39m CASSYL 1010     0.445     1    [31mNA[39m    67    4.49 [4m1[24m[4m8[24m914 [4m2[24m[4m0[24m555
[90m 3[39m SLOBER 110      0.666     1    [31mNA[39m   150    4.51 [4m1[24m[4m8[24m897 [4m2[24m[4m0[24m543
[90m 4[39m SLOBER 1106     0         1    [31mNA[39m    50    4.56 [4m1[24m[4m8[24m849 [4m2[24m[4m0[24m516
[90m 5[39m CECSCH 1114     1.79      1    [31mNA[39m   228    4.47 [4m1[24m[4m8[24m948 [4m2[24m[4m0[24m580
[90m 6[39m PSYBRA 1318     0.447     1    [31mNA[39m    14    4.48 [4m1[24m[4m9[24m011 [4m2[24m[4m0[24m646
[90m 7[39m HIRRUG 1403     1.66      1    [31mNA[39m    12.9  4.58 [4m1[24m[4m8[24m834 [4m2[24m[4m0[24m506
[90m 8[39m CASSYL 1411    [31mNA[39m         0    [31mNA[39m    [31mNA[39m   [31mNA[39m       [31mNA[39m    [31mNA[39m
[90m 9[39m SLOBER 1414     1.40      1    [31mNA[39m    16.6  4.57 [4m1[24m[4m8[24m952 [4m2[24m[4m0[24m622
[90m10[39m GUAGUI 1419    [31mNA[39m         0    [31mNA[39m    [31mNA[39m   [31mNA[39m       [31mNA[39m    [31mNA[39m
[90m# ... with 530 more rows[39m
> 
> 
> 
> cleanEx()

detaching 'package:tidyr'

> nameEx("summary.tt_df")
> ### * summary.tt_df
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summary.tt_df
> ### Title: Summary of 'tt_test()' results.
> ### Aliases: summary.tt_df summary.tt_lst
> 
> ### ** Examples
> 
> assert_is_installed("fgeo.x")
> 
> tt_result <- tt_test(fgeo.x::tree6_3species, fgeo.x::habitat)
Using `plotdim = c(320, 500)`. To change this value see `?tt_test()`.
Using `gridsize = 20`. To change this value see `?tt_test()`.
> 
> summary(tt_result)
[90m# A tibble: 12 x 3[39m
   sp     habitat association
   [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m      
[90m 1[39m CASARB 1       neutral    
[90m 2[39m CASARB 2       neutral    
[90m 3[39m CASARB 3       neutral    
[90m 4[39m CASARB 4       neutral    
[90m 5[39m PREMON 1       neutral    
[90m 6[39m PREMON 2       neutral    
[90m 7[39m PREMON 3       neutral    
[90m 8[39m PREMON 4       neutral    
[90m 9[39m SLOBER 1       neutral    
[90m10[39m SLOBER 2       neutral    
[90m11[39m SLOBER 3       neutral    
[90m12[39m SLOBER 4       neutral    
> 
> # Same
> summary(as_tibble(tt_result))
[90m# A tibble: 12 x 3[39m
   sp     habitat association
   [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m      
[90m 1[39m CASARB 1       neutral    
[90m 2[39m CASARB 2       neutral    
[90m 3[39m CASARB 3       neutral    
[90m 4[39m CASARB 4       neutral    
[90m 5[39m PREMON 1       neutral    
[90m 6[39m PREMON 2       neutral    
[90m 7[39m PREMON 3       neutral    
[90m 8[39m PREMON 4       neutral    
[90m 9[39m SLOBER 1       neutral    
[90m10[39m SLOBER 2       neutral    
[90m11[39m SLOBER 3       neutral    
[90m12[39m SLOBER 4       neutral    
> 
> # You may want to add the explanation to the result of `tt_test()`
> 
> dplyr::left_join(as_tibble(tt_result), summary(tt_result))
Joining, by = c("habitat", "sp")
[90m# A tibble: 12 x 9[39m
   habitat sp    N.Hab Gr.Hab Ls.Hab Eq.Hab Rep.Agg.Neut Obs.Quantile
   [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m        [3m[90m<dbl>[39m[23m        [3m[90m<dbl>[39m[23m
[90m 1[39m 1       CASA~    29   [4m1[24m242    356      2            0        0.776
[90m 2[39m 2       CASA~    20    390   [4m1[24m206      4            0        0.244
[90m 3[39m 3       CASA~    12    778    817      5            0        0.486
[90m 4[39m 4       CASA~     5    932    658     10            0        0.582
[90m 5[39m 1       PREM~    91   [4m1[24m093    504      3            0        0.683
[90m 6[39m 2       PREM~    89   [4m1[24m254    344      2            0        0.784
[90m 7[39m 3       PREM~    40    305   [4m1[24m292      3            0        0.191
[90m 8[39m 4       PREM~    14    270   [4m1[24m322      8            0        0.169
[90m 9[39m 1       SLOB~    18    273   [4m1[24m324      3            0        0.171
[90m10[39m 2       SLOB~    24    810    788      2            0        0.506
[90m11[39m 3       SLOB~    17   [4m1[24m155    440      5            0        0.722
[90m12[39m 4       SLOB~     7   [4m1[24m292    303      5            0        0.808
[90m# ... with 1 more variable: association [3m[90m<chr>[90m[23m[39m
> 
> # You may prefer a wide matrix
> Reduce(rbind, tt_result)
       N.Hab.1 Gr.Hab.1 Ls.Hab.1 Eq.Hab.1 Rep.Agg.Neut.1 Obs.Quantile.1 N.Hab.2
CASARB      29     1242      356        2              0       0.776250      20
PREMON      91     1093      504        3              0       0.683125      89
SLOBER      18      273     1324        3              0       0.170625      24
       Gr.Hab.2 Ls.Hab.2 Eq.Hab.2 Rep.Agg.Neut.2 Obs.Quantile.2 N.Hab.3
CASARB      390     1206        4              0        0.24375      12
PREMON     1254      344        2              0        0.78375      40
SLOBER      810      788        2              0        0.50625      17
       Gr.Hab.3 Ls.Hab.3 Eq.Hab.3 Rep.Agg.Neut.3 Obs.Quantile.3 N.Hab.4
CASARB      778      817        5              0       0.486250       5
PREMON      305     1292        3              0       0.190625      14
SLOBER     1155      440        5              0       0.721875       7
       Gr.Hab.4 Ls.Hab.4 Eq.Hab.4 Rep.Agg.Neut.4 Obs.Quantile.4
CASARB      932      658       10              0        0.58250
PREMON      270     1322        8              0        0.16875
SLOBER     1292      303        5              0        0.80750
> 
> # You may prefer a wide dataframe
> tidyr::spread(summary(tt_result), "habitat", "association")
[90m# A tibble: 3 x 5[39m
  sp     `1`     `2`     `3`     `4`    
  [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m  
[90m1[39m CASARB neutral neutral neutral neutral
[90m2[39m PREMON neutral neutral neutral neutral
[90m3[39m SLOBER neutral neutral neutral neutral
> 
> 
> 
> cleanEx()
> nameEx("tt_test")
> ### * tt_test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tt_test
> ### Title: Torus Translation Test to determine habitat associations of tree
> ###   species.
> ### Aliases: tt_test
> 
> ### ** Examples
> 
> library(fgeo.tool)

Attaching package: 'fgeo.tool'

The following object is masked from 'package:stats':

    filter

> assert_is_installed("fgeo.x")
> 
> # Example data
> tree <- fgeo.x::tree6_3species
> elevation <- fgeo.x::elevation
> 
> # Pick alive trees, of 10 mm or more
> census <- filter(tree, status == "A", dbh >= 10)
> 
> # Pick sufficiently abundant species
> pick <- filter(dplyr::add_count(census, sp), n > 50)
> 
> # Use your habitat data or create it from elevation data
> habitat <- fgeo_habitat(elevation, gridsize = 20, n = 4)
> 
> # Defaults to using all species
> as_tibble(
+   tt_test(census, habitat)
+ )
Using `plotdim = c(320, 500)`. To change this value see `?tt_test()`.
Using `gridsize = 20`. To change this value see `?tt_test()`.
[90m# A tibble: 12 x 8[39m
   habitat sp     N.Hab Gr.Hab Ls.Hab Eq.Hab Rep.Agg.Neut Obs.Quantile
 [90m*[39m [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m        [3m[90m<dbl>[39m[23m        [3m[90m<dbl>[39m[23m
[90m 1[39m 1       CASARB    29   [4m1[24m242    356      2            0        0.776
[90m 2[39m 2       CASARB    20    390   [4m1[24m206      4            0        0.244
[90m 3[39m 3       CASARB    12    778    817      5            0        0.486
[90m 4[39m 4       CASARB     5    932    658     10            0        0.582
[90m 5[39m 1       PREMON    91   [4m1[24m093    504      3            0        0.683
[90m 6[39m 2       PREMON    89   [4m1[24m254    344      2            0        0.784
[90m 7[39m 3       PREMON    40    305   [4m1[24m292      3            0        0.191
[90m 8[39m 4       PREMON    14    270   [4m1[24m322      8            0        0.169
[90m 9[39m 1       SLOBER    18    273   [4m1[24m324      3            0        0.171
[90m10[39m 2       SLOBER    24    810    788      2            0        0.506
[90m11[39m 3       SLOBER    17   [4m1[24m155    440      5            0        0.722
[90m12[39m 4       SLOBER     7   [4m1[24m292    303      5            0        0.808
> 
> Reduce(rbind, tt_test(census, habitat))
Using `plotdim = c(320, 500)`. To change this value see `?tt_test()`.
Using `gridsize = 20`. To change this value see `?tt_test()`.
       N.Hab.1 Gr.Hab.1 Ls.Hab.1 Eq.Hab.1 Rep.Agg.Neut.1 Obs.Quantile.1 N.Hab.2
CASARB      29     1242      356        2              0       0.776250      20
PREMON      91     1093      504        3              0       0.683125      89
SLOBER      18      273     1324        3              0       0.170625      24
       Gr.Hab.2 Ls.Hab.2 Eq.Hab.2 Rep.Agg.Neut.2 Obs.Quantile.2 N.Hab.3
CASARB      390     1206        4              0        0.24375      12
PREMON     1254      344        2              0        0.78375      40
SLOBER      810      788        2              0        0.50625      17
       Gr.Hab.3 Ls.Hab.3 Eq.Hab.3 Rep.Agg.Neut.3 Obs.Quantile.3 N.Hab.4
CASARB      778      817        5              0       0.486250       5
PREMON      305     1292        3              0       0.190625      14
SLOBER     1155      440        5              0       0.721875       7
       Gr.Hab.4 Ls.Hab.4 Eq.Hab.4 Rep.Agg.Neut.4 Obs.Quantile.4
CASARB      932      658       10              0        0.58250
PREMON      270     1322        8              0        0.16875
SLOBER     1292      303        5              0        0.80750
> 
> some_species <- c("CASARB", "PREMON")
> result <- tt_test(census, habitat, sp = some_species)
Using `plotdim = c(320, 500)`. To change this value see `?tt_test()`.
Using `gridsize = 20`. To change this value see `?tt_test()`.
> result
[[1]]
       N.Hab.1 Gr.Hab.1 Ls.Hab.1 Eq.Hab.1 Rep.Agg.Neut.1 Obs.Quantile.1 N.Hab.2
CASARB      29     1242      356        2              0        0.77625      20
       Gr.Hab.2 Ls.Hab.2 Eq.Hab.2 Rep.Agg.Neut.2 Obs.Quantile.2 N.Hab.3
CASARB      390     1206        4              0        0.24375      12
       Gr.Hab.3 Ls.Hab.3 Eq.Hab.3 Rep.Agg.Neut.3 Obs.Quantile.3 N.Hab.4
CASARB      778      817        5              0        0.48625       5
       Gr.Hab.4 Ls.Hab.4 Eq.Hab.4 Rep.Agg.Neut.4 Obs.Quantile.4
CASARB      932      658       10              0         0.5825
attr(,"fixed_nan")
[1] FALSE

[[2]]
       N.Hab.1 Gr.Hab.1 Ls.Hab.1 Eq.Hab.1 Rep.Agg.Neut.1 Obs.Quantile.1 N.Hab.2
PREMON      91     1093      504        3              0       0.683125      89
       Gr.Hab.2 Ls.Hab.2 Eq.Hab.2 Rep.Agg.Neut.2 Obs.Quantile.2 N.Hab.3
PREMON     1254      344        2              0        0.78375      40
       Gr.Hab.3 Ls.Hab.3 Eq.Hab.3 Rep.Agg.Neut.3 Obs.Quantile.3 N.Hab.4
PREMON      305     1292        3              0       0.190625      14
       Gr.Hab.4 Ls.Hab.4 Eq.Hab.4 Rep.Agg.Neut.4 Obs.Quantile.4
PREMON      270     1322        8              0        0.16875
attr(,"fixed_nan")
[1] FALSE

> 
> as_tibble(result)
[90m# A tibble: 8 x 8[39m
  habitat sp     N.Hab Gr.Hab Ls.Hab Eq.Hab Rep.Agg.Neut Obs.Quantile
[90m*[39m [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m        [3m[90m<dbl>[39m[23m        [3m[90m<dbl>[39m[23m
[90m1[39m 1       CASARB    29   [4m1[24m242    356      2            0        0.776
[90m2[39m 2       CASARB    20    390   [4m1[24m206      4            0        0.244
[90m3[39m 3       CASARB    12    778    817      5            0        0.486
[90m4[39m 4       CASARB     5    932    658     10            0        0.582
[90m5[39m 1       PREMON    91   [4m1[24m093    504      3            0        0.683
[90m6[39m 2       PREMON    89   [4m1[24m254    344      2            0        0.784
[90m7[39m 3       PREMON    40    305   [4m1[24m292      3            0        0.191
[90m8[39m 4       PREMON    14    270   [4m1[24m322      8            0        0.169
> 
> summary(result)
[90m# A tibble: 8 x 3[39m
  sp     habitat association
  [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m      
[90m1[39m CASARB 1       neutral    
[90m2[39m CASARB 2       neutral    
[90m3[39m CASARB 3       neutral    
[90m4[39m CASARB 4       neutral    
[90m5[39m PREMON 1       neutral    
[90m6[39m PREMON 2       neutral    
[90m7[39m PREMON 3       neutral    
[90m8[39m PREMON 4       neutral    
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()

detaching 'package:fgeo.tool'

> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  12.88 0.19 24.19 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
